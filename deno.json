{
  "lock": false,
  "tasks": {
    "dev": "deno task --cwd=example/dev dev",
    "dev:hono": "deno task --cwd=modules/hono dev",
    "dev:cache": "deno task --cwd=modules/cache dev",
    "dev:cors": "deno task --cwd=modules/cors dev",
    "dev:ejs": "deno task --cwd=modules/ejs start",
    "dev:es": "deno task --cwd=modules/elasticsearch dev",
    "dev:hbs": "deno task --cwd=modules/hbs start",
    "dev:jwt": "deno task --cwd=modules/jwt dev",
    "dev:mongo": "deno task --cwd=modules/mongo dev",
    "dev:mysql": "deno task --cwd=modules/mysql dev",
    "dev:oak": "deno task --cwd=modules/oak dev",
    "dev:postgres": "deno task --cwd=modules/postgres dev",
    "dev:redis": "deno task --cwd=modules/redis dev",
    "dev:schedule": "deno task --cwd=modules/schedule dev",
    "dev:alias": "deno task --cwd=example/alias start",
    "dev:auth": "deno task --cwd=example/auth start",
    "dev:authentication": "deno task --cwd=example/authentication start",
    "dev:cookie": "deno task --cwd=example/cookie start",
    "dev:lifecycle": "deno run -A example/lifecycle/main.ts",
    "dev:interceptor": "deno run -A --watch example/interceptor/main.ts",
    "dev:decorator": "deno run -A --watch example/decorator/main.ts",
    "dev:globalModule": "deno task --cwd=example/globalModule dev",
    "dev:dynamicModule": "deno task --cwd=example/dynamicModule dev",
    "dev:dynamicModule:prod": "deno task --cwd=example/dynamicModule start",
    "dev:log": "deno task --cwd=example/log dev",
    "dev:oauth": "deno task --cwd=example/oauth start",
    "dev:upload": "deno task --cwd=example/upload start",
    "dev:provider": "deno task --cwd=example/provider start",
    "dev:static": "deno task --cwd=example/static start",
    "dev:sse": "deno task --cwd=example/sse start",
    "dev:stream": "deno task --cwd=example/stream start",
    "cli": "cd cli && deno task install",
    "pm2": "pm2 start --name deno_nest example/main.ts --interpreter='deno' --interpreter-args='run --allow-net --allow-env --allow-write --allow-read --unstable'",
    "test": "DENO_ENV=test deno test --allow-env --allow-net --allow-write --allow-read --parallel --unstable-kv --ignore=example --coverage=cov_profile",
    "unit": "DENO_ENV=test deno test --allow-env --allow-net --allow-write --allow-read --parallel --unstable-kv",
    "cache": "deno cache --lock deno.lock --unstable --lock-write deps.ts",
    "coverage": "deno coverage --unstable --lcov ./cov_profile",
    "coverage:html": "rm -rf cov_profile && deno task test && deno task coverage > cov.lcov && genhtml -o cov_profile/html cov.lcov",
    "log": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0"
  },
  "compilerOptions": {
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    "strictPropertyInitialization": false
  },
  "imports": {
    "oak": "jsr:@oak/oak@^17.1.2",
    "@std/assert": "jsr:@std/assert@^1.0.6",
    "@std/async": "jsr:@std/async@^1.0.6",
    "@std/datetime": "jsr:@std/datetime@^0.225.2",
    "@std/fmt": "jsr:@std/fmt@^1.0.2",
    "@std/http": "jsr:@std/http@^1.0.8",
    "@std/path": "jsr:@std/path@^1.0.6",
    "class_validator": "npm:class-validator@^0.14"
  },
  "workspace": [
    "cli",
    "modules/cache",
    "modules/cors",
    "modules/ejs",
    "modules/elasticsearch",
    "modules/hbs",
    "modules/hono",
    "modules/jwt",
    "modules/mongo",
    "modules/mysql",
    "modules/oak",
    "modules/postgres",
    "modules/redis",
    "modules/schedule",
    "modules/uinv",
    "src",
    "tests",
    "example/alias",
    "example/auth",
    "example/authentication",
    "example/cookie",
    "example/decorator",
    "example/dev",
    "example/dynamicModule",
    "example/globalModule",
    "example/interceptor",
    "example/lifecycle",
    "example/log",
    "example/oauth",
    "example/provider",
    "example/sse",
    "example/static",
    "example/stream",
    "example/upload"
  ]
}
