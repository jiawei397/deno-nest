{
  "version": "3.10.2",
  "name": "deno_nest",
  "tasks": {
    "dev": "deno run --unstable --allow-net --allow-read --allow-write --allow-env --check --watch example/dev/main.ts",
    "dev:hono": "deno task --cwd=modules/hono dev",
    "dev:cache": "deno task --cwd=modules/cache dev",
    "dev:cors": "deno task --cwd=modules/cors dev",
    "dev:ejs": "deno task --cwd=modules/ejs start",
    "dev:es": "deno task --cwd=modules/elasticsearch dev",
    "dev:hbs": "deno task --cwd=modules/hbs start",
    "dev:mongo": "deno task --cwd=modules/mongo dev",
    "dev:mysql": "deno task --cwd=modules/mysql dev",
    "dev:oak": "deno task --cwd=modules/oak dev",
    "dev:postgres": "deno task --cwd=modules/postgres dev",
    "dev:redis": "deno task --cwd=modules/redis dev",
    "dev:schedule": "deno task --cwd=modules/schedule dev",
    "dev:alias": "deno task --cwd=example/alias start",
    "dev:auth": "deno task --cwd=example/auth start",
    "dev:cookie": "deno task --cwd=example/cookie start",
    "dev:lifecycle": "deno run -A example/lifecycle/main.ts",
    "dev:interceptor": "deno run -A --watch example/interceptor/main.ts",
    "dev:decorator": "deno run -A --watch example/decorator/main.ts",
    "dev:globalModule": "deno task --cwd=example/globalModule dev",
    "dev:dynamicModule": "deno task --cwd=example/dynamicModule dev",
    "dev:dynamicModule:prod": "deno task --cwd=example/dynamicModule start",
    "dev:log": "deno task --cwd=example/log dev",
    "dev:upload": "deno run -A --watch example/upload/main.ts",
    "dev:provider": "deno run -A --watch example/provider/main.ts",
    "dev:static": "deno task --cwd=example/static start",
    "dev:sse": "deno run -A example/sse/main.ts",
    "dev:stream": "deno run -A example/stream/main.ts",
    "cli": "deno task --cwd=cli install",
    "pm2": "pm2 start --name deno_nest example/main.ts --interpreter='deno' --interpreter-args='run --allow-net --allow-env --allow-write --allow-read --unstable'",
    "test": "DENO_ENV=test deno test --allow-env --allow-net --allow-write --allow-read --parallel --unstable --ignore=example --coverage=cov_profile",
    "unit": "DENO_ENV=test deno test --allow-env --allow-net --allow-write --allow-read --parallel --unstable",
    "cache": "deno cache --lock deno.lock --unstable --lock-write deps.ts",
    "coverage": "deno coverage --unstable --lcov ./cov_profile",
    "coverage:html": "rm -rf cov_profile && deno task test && deno task coverage > cov.lcov && genhtml -o cov_profile/html cov.lcov",
    "log": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0"
  },
  "compilerOptions": {
    "removeComments": true,
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    "strictPropertyInitialization": false
  },
  "importMap": "./.vscode/import_map.json"
}
